-- MySQL Script generated by MySQL Workbench
-- Wed Aug 19 19:23:08 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema BookStore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BookStore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BookStore` DEFAULT CHARACTER SET utf8 ;
USE `BookStore` ;

-- -----------------------------------------------------
-- Table `BookStore`.`book_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`book_status` (
  `id_BookStatus` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_BookStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`book` (
  `title` VARCHAR(45) NOT NULL,
  `author` VARCHAR(45) NOT NULL,
  `price` DECIMAL NOT NULL,
  `bookStatus` INT NOT NULL,
  `arriveDate` DATE NOT NULL,
  `publicationDate` DATE NOT NULL,
  `id_Book` INT NOT NULL,
  PRIMARY KEY (`id_Book`),
  UNIQUE INDEX `id_Book_UNIQUE` (`id_Book` ASC),
  INDEX `book_status_to_book_idx` (`bookStatus` ASC),
  CONSTRAINT `book_status_to_book`
    FOREIGN KEY (`bookStatus`)
    REFERENCES `BookStore`.`book_status` (`id_BookStatus`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`customer` (
  `id_Customer` INT NOT NULL,
  `age` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_Customer`),
  UNIQUE INDEX `idCustomer_UNIQUE` (`id_Customer` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`requestForBookStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`requestForBookStatus` (
  `id_RequestForBookStatus` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_RequestForBookStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`requestForBook`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`requestForBook` (
  `id_RequestForBook` INT NOT NULL,
  `id_Book` INT NOT NULL,
  `requestForBook_Status` INT NOT NULL,
  `id_Order` INT NOT NULL,
  PRIMARY KEY (`id_RequestForBook`),
  UNIQUE INDEX `id_RequestForBook_UNIQUE` (`id_RequestForBook` ASC),
  INDEX `requestForBook_idx` (`id_Book` ASC),
  CONSTRAINT `book_requestForBook`
    FOREIGN KEY (`id_Book`)
    REFERENCES `BookStore`.`book` (`id_Book`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `requestForBookStatus_to_requestForBook`
    FOREIGN KEY (`id_RequestForBook`)
    REFERENCES `BookStore`.`requestForBookStatus` (`id_RequestForBookStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`order_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`order_status` (
  `name` VARCHAR(45) NOT NULL,
  `id_OrderStatus` INT NOT NULL,
  PRIMARY KEY (`id_OrderStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`order` (
  `dateOfOrder` DATE NOT NULL,
  `dateOfDoneOrder` DATE NOT NULL,
  `priceOfOrder` DECIMAL NOT NULL,
  `orderStatus` INT NOT NULL,
  `id_Customer` INT NOT NULL,
  `id_Order` INT NOT NULL,
  `id_Book` INT NOT NULL,
  PRIMARY KEY (`id_Order`),
  UNIQUE INDEX `id_Order_UNIQUE` (`id_Order` ASC),
  UNIQUE INDEX `id_Book_UNIQUE` (`id_Book` ASC),
  INDEX `order_to_orderStatus_idx` (`orderStatus` ASC),
  INDEX `customer_to_order_idx` (`id_Customer` ASC),
  CONSTRAINT `order_to_orderStatus`
    FOREIGN KEY (`orderStatus`)
    REFERENCES `BookStore`.`order_status` (`id_OrderStatus`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `customer_to_order`
    FOREIGN KEY (`id_Customer`)
    REFERENCES `BookStore`.`customer` (`id_Customer`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BookStore`.`order_book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BookStore`.`order_book` (
  `id_Book` INT NOT NULL,
  `id_Order` INT NOT NULL,
  PRIMARY KEY (`id_Book`, `id_Order`),
  UNIQUE INDEX `id_Book_UNIQUE` (`id_Book` ASC),
  UNIQUE INDEX `id_Order_UNIQUE` (`id_Order` ASC),
  CONSTRAINT `order_book_to_book`
    FOREIGN KEY (`id_Book`)
    REFERENCES `BookStore`.`book` (`id_Book`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `order_book_to_order`
    FOREIGN KEY (`id_Order`)
    REFERENCES `BookStore`.`order` (`id_Order`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
